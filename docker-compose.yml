services:
  kpi-database:
    build:
      context: ./smart-industrial-database
    container_name: smart-database-container
    ports:
      - "5432:5432"
      - "8002:8002"
    volumes:
      - pg_data:/var/lib/postgresql/data  # Mount the pg_data volume
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: KPI_database
    command: ["/bin/bash", "-c", "docker-entrypoint.sh postgres & sleep 10 && /opt/venv/bin/uvicorn app.main:app --host 0.0.0.0 --port 8002"]
    restart: unless-stopped
    networks:
      - kreative-performative-individuals-network

  kb-service:
    build:
      context: ./KB
    container_name: kb-service-container
    ports:
      - "8001:8001"
    networks:
      - kreative-performative-individuals-network

  kpi-engine:
    build:
      context: ./KPI-Engine
    container_name: kpi-engine-container
    ports:
      - "8008:8008"
    environment:
      - KAFKA_TOPIC_NAME=kpi_pipeline
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    depends_on:
      - kpi-database
      - kb-service
      - data-preprocessing
      - zookeeper
      - kafka
    restart: unless-stopped
    networks:
      - kreative-performative-individuals-network
      - broker-kafka

  data-preprocessing:
    container_name: data-preprocessing-container
    build:
      context: ./data-preprocessing-
      dockerfile: Dockerfile
    environment:
      - KAFKA_TOPIC_NAME=kpi_pipeline
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
      - MAX_WORKERS=4
    ports:
      - "8003:8003"
    restart: always
    depends_on:
      - zookeeper
      - kafka
    networks:
      - broker-kafka
      - kreative-performative-individuals-network

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    networks:
      - broker-kafka
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    networks:
      - broker-kafka
    depends_on:
      - kafka
      - zookeeper
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - kreative-performative-individuals-network
    entrypoint: /bin/bash -c "ollama serve & sleep 5 && ollama pull llama3.2 && ollama pull nomic-embed-text && tail -f /dev/null"

  rag:
    build:
      context: ./RAG5
    environment:
      - OLLAMA_ORIGINS=http://ollama:11434
    container_name: rag
    ports: 
      - "8005:8005"
    depends_on:
      - ollama
    networks:
      - kreative-performative-individuals-network

volumes:
  pg_data:
    name: pg_data

networks:
  kreative-performative-individuals-network:
    driver: bridge
  broker-kafka:
    driver: bridge
